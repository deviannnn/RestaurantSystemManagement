version: '3.8'

services:
  catalog_mysql:
    image: mysql:9
    deploy:
      replicas: 1
      restart_policy:
        condition: always
    environment:
      - MYSQL_DATABASE=restaurant_system_catalog
      - MYSQL_ROOT_PASSWORD=123456
    ports:
      - "3307:3306"
    volumes:
      - catalog-db-data:/var/lib/mysql
    networks:
      - restaurant_net

  order_mysql:
    image: mysql:9
    deploy:
      replicas: 1
      restart_policy:
        condition: always
    environment:
      - MYSQL_DATABASE=restaurant_system_order
      - MYSQL_ROOT_PASSWORD=123456
    ports:
      - "3308:3306"
    volumes:
      - order-db-data:/var/lib/mysql
    networks:
      - restaurant_net

  payment_mysql:
    image: mysql:9
    deploy:
      replicas: 1
      restart_policy:
        condition: always
    environment:
      - MYSQL_DATABASE=restaurant_system_payment
      - MYSQL_ROOT_PASSWORD=123456
    ports:
      - "3309:3306"
    volumes:
      - payment-db-data:/var/lib/mysql
    networks:
      - restaurant_net

  table_mysql:
    image: mysql:9
    deploy:
      replicas: 1
      restart_policy:
        condition: always
    environment:
      - MYSQL_DATABASE=restaurant_system_table
      - MYSQL_ROOT_PASSWORD=123456
    ports:
      - "3310:3306"
    volumes:
      - table-db-data:/var/lib/mysql
    networks:
      - restaurant_net

  user_mysql:
    image: mysql:9
    deploy:
      replicas: 1
      restart_policy:
        condition: always
    environment:
      - MYSQL_DATABASE=restaurant_system_user
      - MYSQL_ROOT_PASSWORD=123456
    ports:
      - "3311:3306"
    volumes:
      - user-db-data:/var/lib/mysql
    networks:
      - restaurant_net

  rabbitmq_service:
    image: rabbitmq:3.13-management-alpine
    deploy:
      replicas: 1
      restart_policy:
        condition: always
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    ports:
      - "15672:15672"
      - "5672:5672"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - restaurant_net

  redis_service:
    image: redis:7.2.5-alpine
    deploy:
      replicas: 1
      restart_policy:
        condition: always
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/var/lib/redis
    networks:
      - restaurant_net

  catalog_service:
    image: deviannnn/restaurant:catalog
    deploy:
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
    environment:
      - NODE_ENV=production
      - PORT=5000
      - PROD_REDIS_HOST=redis_service
      - PROD_DB_USERNAME=root
      - PROD_DB_PASSWORD=123456
      - PROD_DB_NAME=restaurant_system_catalog
      - PROD_DB_HOSTNAME=catalog_mysql
    networks:
      - restaurant_net
    depends_on:
      - redis_service
      - catalog_mysql

  kitchen_service:
    image: deviannnn/restaurant:kitchen
    deploy:
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
    environment:
      - NODE_ENV=production
      - PORT=5000
      - PROD_RABBITMQ_USERNAME=admin
      - PROD_RABBITMQ_PASSWORD=admin
      - PROD_RABBITMQ_HOSTNAME=rabbitmq_service
    networks:
      - restaurant_net
    depends_on:
      - rabbitmq_service

  mail_service:
    image: deviannnn/restaurant:mail
    deploy:
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
    environment:
      - NODE_ENV=production
      - PORT=5000
      - PUBLIC_IP_GATEWAY=
      - PROD_RABBITMQ_USERNAME=admin
      - PROD_RABBITMQ_PASSWORD=admin
      - PROD_RABBITMQ_HOSTNAME=rabbitmq_service
    networks:
      - restaurant_net
    depends_on:
      - rabbitmq_service

  order_service:
    image: deviannnn/restaurant:order
    deploy:
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
    environment:
      - NODE_ENV=production
      - PORT=5000
      - PROD_RABBITMQ_USERNAME=admin
      - PROD_RABBITMQ_PASSWORD=admin
      - PROD_RABBITMQ_HOSTNAME=rabbitmq_service
      - PROD_DB_USERNAME=root
      - PROD_DB_PASSWORD=123456
      - PROD_DB_NAME=restaurant_system_order
      - PROD_DB_HOSTNAME=order_mysql
      - CATALOG_SERVICE_HOSTNAME=catalog_service
      - TABLE_SERVICE_HOSTNAME=table_service
      - CATALOG_SERVICE_PORT=5000
      - TABLE_SERVICE_PORT=5000
    networks:
      - restaurant_net
    depends_on:
      - rabbitmq_service
      - order_mysql
      - catalog_service
      - table_service

  payment_service:
    image: deviannnn/restaurant:payment
    deploy:
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
    environment:
      - NODE_ENV=production
      - PORT=5000
      - PROD_DB_USERNAME=root
      - PROD_DB_PASSWORD=123456
      - PROD_DB_NAME=restaurant_system_payment
      - PROD_DB_HOSTNAME=payment_mysql
      - ORDER_SERVICE_HOSTNAME=order_service
      - ORDER_SERVICE_PORT=5000
    networks:
      - restaurant_net
    depends_on:
      - payment_mysql
      - order_service

  table_service:
    image: deviannnn/restaurant:table
    deploy:
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
    environment:
      - NODE_ENV=production
      - PORT=5000
      - PROD_RABBITMQ_USERNAME=admin
      - PROD_RABBITMQ_PASSWORD=admin
      - PROD_RABBITMQ_HOSTNAME=rabbitmq_service
      - PROD_DB_USERNAME=root
      - PROD_DB_PASSWORD=123456
      - PROD_DB_NAME=restaurant_system_table
      - PROD_DB_HOSTNAME=table_mysql
    networks:
      - restaurant_net
    depends_on:
      - rabbitmq_service
      - table_mysql

  user_service:
    image: deviannnn/restaurant:user
    deploy:
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
    environment:
      - NODE_ENV=production
      - PORT=5000
      - PROD_RABBITMQ_USERNAME=admin
      - PROD_RABBITMQ_PASSWORD=admin
      - PROD_RABBITMQ_HOSTNAME=rabbitmq_service
      - PROD_REDIS_HOST=redis_service
      - PROD_DB_USERNAME=root
      - PROD_DB_PASSWORD=123456
      - PROD_DB_NAME=restaurant_system_user
      - PROD_DB_HOSTNAME=user_mysql
    networks:
      - restaurant_net
    depends_on:
      - rabbitmq_service
      - redis_service
      - user_mysql

  waiter_service:
    image: deviannnn/restaurant:waiter
    deploy:
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
    environment:
      - NODE_ENV=production
      - PORT=5000
      - PROD_RABBITMQ_USERNAME=admin
      - PROD_RABBITMQ_PASSWORD=admin
      - PROD_RABBITMQ_HOSTNAME=rabbitmq_service
    networks:
      - restaurant_net
    depends_on:
      - rabbitmq_service

  api_gateway:
    image: deviannnn/restaurant:api-gateway
    deploy:
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
    environment:
      - NODE_ENV=production
      - PROD_REDIS_HOST=redis_service
      - CATALOG_SERVICE_HOSTNAME=catalog_service
      - MAIL_SERVICE_HOSTNAME=mail_service
      - ORDER_SERVICE_HOSTNAME=order_service
      - PAYMENT_SERVICE_HOSTNAME=payment_service
      - TABLE_SERVICE_HOSTNAME=table_service
      - USER_SERVICE_HOSTNAME=user_service
      - KITCHEN_SERVICE_HOSTNAME=kitchen_service
      - WAITER_SERVICE_HOSTNAME=waiter_service
      - CATALOG_SERVICE_PORT=5000
      - MAIL_SERVICE_PORT=5000
      - ORDER_SERVICE_PORT=5000
      - PAYMENT_SERVICE_PORT=5000
      - TABLE_SERVICE_PORT=5000
      - USER_SERVICE_PORT=5000
      - KITCHEN_SERVICE_PORT=5000
      - WAITER_SERVICE_PORT=5000
    ports:
      - "5000:5000"
    networks:
      - restaurant_net
    depends_on:
      - redis_service
      - catalog_service
      - mail_service
      - order_service
      - payment_service
      - table_service
      - user_service
      - kitchen_service
      - waiter_service

  viz:
    image: dockersamples/visualizer
    ports:
      - "8080:8080"
    deploy:
      placement:
        constraints:
          - node.role == manager
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - restaurant_net

volumes:
  catalog-db-data:
  order-db-data:
  payment-db-data:
  table-db-data:
  user-db-data:
  rabbitmq-data:
  redis-data:


networks:
  restaurant_net:
    driver: overlay
